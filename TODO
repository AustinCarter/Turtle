Engine:
	- Seralization*
		- seralization*
		- deserializaton*
	- scripting (Lua w/entt::meta to bind)*
		- Move to some sort of Script Class*
		- Add Metadata for desired types*
		- Serialize*
		- Desrialize*
		- ScriptComponent*
			- ComponentUI*
		- read from file*
		- Clean up error messages*
		- Text Editor?
		- Expose some params to C++ (props table)*
	- Particles*
	- Sound
		- miniaudio 
		- sound asset managment 
		- sound component
	- Physics
		- box 2d or handroll?
	- lighting	
	- UI system
	- Auto Scale IMGUI UI for different screen sizes
	- Animation : Not sure if I want to do this engine side yet
	- Material (Shader + Texture)
	- Shader Asset Manegment
Editor:
	- Load/Save Scenes (Re: Seralization)*
		- save*
		- load*
	- Bind scripts*
	- Scene play
	- Export to application
	- entity click to select and drag (requires mouse transform to world space) 
		- Gizmos
	- Tile Map/Grid Import and Placement UI
		- import tileset/tileset component*
		- set tileset active*
		- display grid viewport panel*
		- select place tiles*
		- conversion from opengl size to pixels*
		- mouse transform conversion to world space
		- add tiles to map
		- TileMap component*
	- layer integration
	- Select Shader	(RE: Materials)



Need a way of removing a decoder from the audio player when it is done playing, but still have it possible to play it again. 
	could move play to the audio player and pass in the source then instead of using AddSource, would then juse reset the decoder and add it to the list in the Play method. When a decoder reached the end of its data it can then beremoved from the audio decoder list.
Might make audio player a sigleton and have it act as a audio manager, can just use the volume on decoder to adjust the volume 	of music and sound effects 