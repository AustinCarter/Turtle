
SHORT TERM GOALS:
	get lua to do onkey/key pressed
		- access to input*
		- refactor how globals are handled (dont want to have to type Global. for all statics, would rather have them use table specific totheir function, such as Input. for key and mouse info)*
	physics/collisions

Engine:
	- Seralization*
		- seralization*
		- deserializaton*
	- scripting (Lua w/entt::meta to bind)*
		- Move to some sort of Script Class*
		- Add Metadata for desired types*
		- Serialize*
		- Desrialize*
		- ScriptComponent*
			- ComponentUI*
		- read from file*
		- Clean up error messages*
		- Text Editor?
		- Expose some params to C++ (props table)*
	- Particles*
	- Sound*
		- miniaudio* 
		- sound asset managment* 
		- sound component*
		- Way to stop playing a sound (find in vector and remove, maybe reset some things. care for threads)*
	- Physics
		- box 2d or handroll?
	- lighting	
	- UI system
	
	- Auto Scale IMGUI UI for different screen sizes
	- Animation : Not sure if I want to do this engine side yet
	- Material (Shader + Texture)
	- Shader Asset Manegment
Editor:
	- Load/Save Scenes (Re: Seralization)*
		- save*
		- load*
	- Bind scripts*
	- Scene play
	- Export to application
	- entity click to select and drag (requires mouse transform to world space) 
		- Gizmos
		- Pixel perfect selection (https://www.youtube.com/watch?v=8fAJ1AzWFTs)

- Tile Map/Grid Import and Placement UI
		- import tileset/tileset component*
		- set tileset active*
		- display grid viewport panel*
		- select place tiles*
		- conversion from opengl size to pixels*
		- mouse transform conversion to world space
		- add tiles to map
		- TileMap component*
	- layer integration
	- Select Shader	(RE: Materials)
