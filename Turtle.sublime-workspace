{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Texture",
				"TextureManager\t(Scene.cpp)"
			],
			[
				"m_Text",
				"m_TextureMap\tabc"
			],
			[
				"Trans",
				"Transform\tabc"
			],
			[
				"Transf",
				"TransformComponent\tabc"
			],
			[
				"valur",
				"value_ptr\t(EditorLayer.cpp)"
			],
			[
				"Transfo",
				"TransformComponent\t(EditorLayer.cpp)"
			],
			[
				"m_Enti",
				"m_EntityHandle\tabc"
			],
			[
				"TreeNode",
				"TreeNodeEx\t(imgui_demo.cpp)"
			],
			[
				"m_Scene",
				"m_SceneHeirarchy\t(EditorLayer.h)"
			],
			[
				"Tag",
				"TagComponent\t(EditorLayer.cpp)"
			],
			[
				"Instance",
				"InstantiateScript\t(Components.h)"
			],
			[
				"m_Camera",
				"m_CameraEntity\tabc"
			],
			[
				"Insta",
				"InstantiateFunction\t(Components.h)"
			],
			[
				"orht",
				"orthoSize\tabc"
			],
			[
				"m_Ortho",
				"m_OrthographicSize\tabc"
			],
			[
				"m_",
				"m_OrthographicFar\tabc"
			],
			[
				"m_Orthogra",
				"m_OrthographicFar\tabc"
			],
			[
				"m_Or",
				"m_OrthographicNear\tabc"
			],
			[
				"ort",
				"orthoRight\tabc"
			],
			[
				"Scne",
				"SceneCamera\tabc"
			],
			[
				"Camer",
				"CameraComponent\tabc"
			],
			[
				"Get",
				"GetComponent\tabc"
			],
			[
				"null",
				"nullptr\t(Entity.h)"
			],
			[
				"TRans",
				"TransformComponent\tabc"
			],
			[
				"Camera",
				"CameraComponent\t(Components.h)"
			],
			[
				"m_Camer",
				"m_CameraEntity\t(EditorLayer.h)"
			],
			[
				"glm",
				"glm.hpp\t(Scene.cpp)"
			],
			[
				"Ortho",
				"OrthographicCamera.h\t(Turtle.h)"
			],
			[
				"En",
				"Entity\t(Scene.h)"
			],
			[
				"ent",
				"entity\tabc"
			],
			[
				"Tran",
				"TransformComponent\tabc"
			],
			[
				"Scene",
				"Scene.h\t(Scene.cpp)"
			],
			[
				"m_Vew",
				"m_ViewportHovered\tabc"
			],
			[
				"m_Ve",
				"m_ViewportFocused\tabc"
			],
			[
				"ImGui",
				"ImGui\tabc"
			],
			[
				"m_vi",
				"m_ViewportFocused\tabc"
			],
			[
				"m_View",
				"m_ViewportFocuse\t(EditorLayer.cpp)"
			],
			[
				"Renderer",
				"RendererAPI\tabc"
			],
			[
				"TURT_",
				"TURT_PROFILE_FUNCTION\t(EditorLayer.cpp)"
			],
			[
				"view",
				"viewportPanelSize\tabc"
			],
			[
				"Windowswind",
				"WindowsWindow.h\t(WindowsWindow.cpp)"
			],
			[
				"Core",
				"Core.h\t(Application.h)"
			],
			[
				"g",
				"glad.h\t(OpenGLTexture.h)"
			],
			[
				"Open",
				"OpenGLFramebuffer\t(OpenGLFramebuffer.h)"
			],
			[
				"Frame",
				"Framebuffer\tabc"
			],
			[
				"dockign",
				"dockingEnabled\tabc"
			],
			[
				"pubi",
				"public\t(Texture.h)"
			],
			[
				"Ren",
				"Renderer2D\tabc"
			],
			[
				"spir",
				"spriteSize\tabc"
			],
			[
				"sprite",
				"spriteSize\tabc"
			],
			[
				"m_S",
				"m_Sprite\tabc"
			],
			[
				"Draw",
				"DrawQuad\tabc"
			],
			[
				"m_Spr",
				"m_SpriteSheet\tabc"
			],
			[
				"Create",
				"CreateFromCoords\t(SubTexture2D.cpp)"
			],
			[
				"GetTex",
				"GetTexCoords\t(SubTexture2D.h)"
			],
			[
				"m_Tex",
				"m_TexCoords\tabc"
			],
			[
				"Q",
				"QuadCount\t(Renderer2D.cpp)"
			],
			[
				"GetTot",
				"GetTotalIndexCount\t(renderer2d.h)"
			],
			[
				"Begin",
				"BeginScene\tabc"
			],
			[
				"Render",
				"Renderer2D\tabc"
			],
			[
				"Stat",
				"Statistics\tabc"
			],
			[
				"a_Tex",
				"a_TexIndex\tabc"
			],
			[
				"v_Tex",
				"v_TexIndex\tabc"
			],
			[
				"Quad",
				"QuadVertexBufferPtr\tabc"
			],
			[
				"TextureSlo",
				"TextureSlots\tabc"
			],
			[
				"TextureSlot",
				"TextureSlotIndex\tabc"
			],
			[
				"Max",
				"MaxIndices\tabc"
			],
			[
				"Ve",
				"Vertex\t(OpenGLBuffer.cpp)"
			],
			[
				"TU",
				"TURT_PROFILE_SCOPE\t(Sandbox2D.cpp)"
			],
			[
				"TURT_PROFILE",
				"TURT_PROFILE_FUNCTION\t(Sandbox2D.cpp)"
			],
			[
				"end",
				"endTimepoint\tabc"
			],
			[
				"size",
				"sizeof\tabc"
			],
			[
				"glad",
				"glad.h\t(OpenGLTexture.cpp)"
			],
			[
				"Textu",
				"TextureShader\tabc"
			],
			[
				"UploadUni",
				"UploadUniformFloat3\tabc"
			],
			[
				"Upload",
				"UploadUniformMat4\t(Renderer.cpp)"
			],
			[
				"Flat",
				"FlatColorShader\tabc"
			],
			[
				"REnder",
				"Renderer2DStorage\tabc"
			],
			[
				"Rendere",
				"Renderer2DStorage\tabc"
			],
			[
				"RenderComm",
				"RenderCommand\tabc"
			],
			[
				"Times",
				"Timestep.h\t(Turtle.h)"
			],
			[
				"O",
				"OrthographicCamera\t(SandboxApp.cpp)"
			],
			[
				"m_Sahder",
				"m_ShaderLibrary\tabc"
			],
			[
				"Ope",
				"OpenGLShader\tabc"
			],
			[
				"glShader",
				"glShaderIdIndex\tabc"
			],
			[
				"vertex",
				"vertexSrc\tabc"
			],
			[
				"next",
				"nextLinePos\tabc"
			],
			[
				"type",
				"typeToken\tabc"
			],
			[
				"TURT_CORE",
				"TURT_CORE_ASSERT\tabc"
			],
			[
				"shaderSou",
				"shaderSources\t(OpenGLShader.h)"
			],
			[
				"data",
				"dataFormat\tabc"
			],
			[
				"m_Textu",
				"m_TextureShader\tabc"
			],
			[
				"Text",
				"Texture2D\tabc"
			],
			[
				"OpenGLTe",
				"OpenGLTexture.h\t(Texture.cpp)"
			],
			[
				"Openg",
				"OpenGLTexture2D\tabc"
			],
			[
				"Im",
				"ImGui\t(Application.h)"
			],
			[
				"m_Square",
				"m_SquareColor\tabc"
			],
			[
				"tran",
				"translate\t(OrthographicCamera.cpp)"
			],
			[
				"m_Sq",
				"m_SquarePos\tabc"
			],
			[
				"m_camerRo",
				"m_CameraRotationSpeed\tabc"
			],
			[
				"Vertex",
				"VertexArray\t(Application.cpp)"
			],
			[
				"RenderComma",
				"RenderCommand.h\t(Renderer.h)"
			],
			[
				"Orth",
				"OrthographicCamera\t(OrthographicCamera.h)"
			],
			[
				"GetView",
				"GetViewProjectionMatrix\t(OrthographicCamera.h)"
			],
			[
				"m_shader",
				"m_ShaderSq"
			],
			[
				"m_p",
				"m_ProjectionMatrix\tabc"
			],
			[
				"OpenGLRen",
				"OpenGLRendererAPI.h\t(RenderCommand.cpp)"
			],
			[
				"m_s",
				"m_SquareVA\tabc"
			],
			[
				"Re",
				"Renderer\t(Buffer.cpp)"
			],
			[
				"index",
				"indexBuffer\tabc"
			],
			[
				"ver",
				"vertexBuffer\tabc"
			],
			[
				"m_Shader",
				"m_ShaderSq\tabc"
			],
			[
				"Ver",
				"VertexBuffer\tabc"
			],
			[
				"V",
				"VertexBuffer\tabc"
			],
			[
				"Verte",
				"VertexArray\tabc"
			],
			[
				"Bu",
				"Buffer.h\t(Application.h)"
			],
			[
				"Buffer",
				"BufferLayout\tabc"
			],
			[
				"Buffe",
				"BufferLayout\tabc"
			],
			[
				"framg",
				"fragmentSrc\tabc"
			],
			[
				"verte",
				"vertexSrc\tabc"
			],
			[
				"inclu",
				"include\t(premake5.lua)"
			],
			[
				"OpenGL",
				"OpenGLVertexBuffer\t(OpenGLBuffer.h)"
			],
			[
				"REndere",
				"RendererAPI\tabc"
			],
			[
				"v",
				"v_Position\tabc"
			],
			[
				"fragmen",
				"fragmentShader\t(Shader.cpp)"
			],
			[
				"vert",
				"vertexSrc\tabc"
			],
			[
				"Shader",
				"Shader.h\t(Shader.cpp)"
			],
			[
				"m_ver",
				"m_VertexArray\tabc"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Tortuga/src/Panels/SceneHeirarchyPanel.cpp",
			"settings":
			{
				"buffer_size": 2438,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/Engine.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/MSBuild selector/MSBuildSelector.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/MSBuild selector/MSBuildSelector.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/Premake/Premake.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/User/callpremake.sublime-build",
					""
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/MSBuild selector/MSBuildSelector.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/MSBuild selector/MSBuildSelector.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/callpremake.sublime-build",
					""
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 94.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"build",
				"Build: New Build System"
			],
			[
				"proe",
				"Project: Edit"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"font",
				"Set Syntax: Font"
			],
			[
				"proj",
				"Project: Edit"
			],
			[
				"indentati",
				"Indentation: Convert to Tabs"
			],
			[
				"isntallp",
				"Package Control: Install Package"
			],
			[
				"git",
				"Set Syntax: Git Log"
			],
			[
				"chang",
				"Changelog"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"project",
				"Project: Edit"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"premake",
				"Premake: Generate"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"indentation",
				"Indentation: Convert to Tabs"
			],
			[
				"save",
				"File: Save All"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"insall",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insal",
				"Package Control: Install Package"
			],
			[
				"settin",
				"Preferences: Settings"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"c",
				"Set Syntax: C++"
			],
			[
				"mips",
				"Set Syntax: MIPS"
			],
			[
				"text",
				"Set Syntax: Plain Text"
			],
			[
				"mark",
				"Set Syntax: MultiMarkdown"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"ard",
				"Set Syntax: Arduino"
			],
			[
				"ardui",
				"Set Syntax: Arduino"
			],
			[
				"plain",
				"Set Syntax: Plain Text"
			],
			[
				"xque",
				"Set Syntax: XQuery"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"plain t",
				"Set Syntax: Plain Text"
			],
			[
				"pac",
				"Package Control: Add Channel"
			],
			[
				"gls",
				"Set Syntax: GLSL"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			]
		],
		"width": 496.0
	},
	"console":
	{
		"height": 194.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Austin/Desktop/Turtle",
		"/C/Users/Austin/Desktop/Turtle/Tortuga",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/assets",
		"/C/Users/Austin/Desktop/Turtle/Turtle",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene"
	],
	"file_history":
	[
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Components.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/EditorLayer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Texture.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/TextureManager.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/EditorLayer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Texture.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Core.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Application.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Application.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/TextureManager.cpp",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/TortugaApp.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Renderer2D.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Scene.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLTexture.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLTexture.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/SubTexture2D.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/renderer2d.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Shader.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/SubTexture2D.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/SceneHeirarchyPanel.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLRendererAPI.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLFramebuffer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Camera.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/SceneCamera.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/SceneCamera.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/GraphicsContext.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/openglcontext.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/imgui_demo.cpp",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/SceneHeirarchyPanel.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Entity.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/ImGui/ImGuiLayer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLRendererAPI.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/ScriptableEntity.h",
		"/C/Users/Austin/Desktop/Turtle/premake5.lua",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Scene.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Debug/Instrumentor.h",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/src/Sandbox2D.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Entity.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/entt/include/entt.hpp",
		"/C/Users/Austin/AppData/Roaming/Sublime Text 3/Packages/User/Engine.sublime-build",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/ImGui/ImGuiLayer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Events/Event.h",
		"/C/Users/Austin/AppData/Roaming/Sublime Text 3/Packages/User/callpremake.sublime-build",
		"/C/Users/Austin/Desktop/Turtle/Turtle.sublime-project",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/turtpch.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Shader.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Buffer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/VertexArray.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Buffer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/glm/test/core/core_func_geometric.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Framebuffer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/VertexArray.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/assets/shaders/Texture.glsl",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Framebuffer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLContext.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/input.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/OrthographicCameraController.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLFramebuffer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/OrthographicCameraController.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/RendererAPI.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows/WindowsInput.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows/WindowsInput.h",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/assets/shaders/Texture.glsl",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/EntryPoint.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/OrthographicCamera.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Window.h",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/src/sandbox2d.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Window.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows/WindowsWindow.cpp",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/src/SandboxApp.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLShader.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLShader.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/RenderCommand.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLBuffer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLBuffer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Application.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/OrthographicCamera.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Renderer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/assets/shaders/FlatColor.glsl",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/LayerStack.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLVertexArray.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/RenderCommand.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Renderer2D.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Events/ApplicationEvent.h",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/src/Sandbox2D.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Log.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/LayerStack.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Layer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/OrthographicCameraController.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/OrthographicCameraController.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows/WindowsWindow.h",
		"/C/Users/Austin/T-Engine/4.0/settings/upgrades.cfg",
		"/C/Users/Austin/T-Engine/4.0/settings/resolution.cfg",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/GLFW/CMakeLists.txt",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Layer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Application.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Renderer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Layer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/OrthographicCameraControler.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/RendererAPI.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/rendercommand.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/rendererapi.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/input.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/orthographiccamera.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Timestep.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLVertexArray.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Log.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Log.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/GLFW/include/GLFW/glfw3.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/LayerStack.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/LayerStack.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/ImGui/ImGuiBuild.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLContext.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/Glad/include/glad/glad.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Window.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/premake5.lua",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/Glad/premake5.lua",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/GLFW/premake5.lua",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/imconfig.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/examples/imgui_impl_opengl3.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/examples/imgui_impl_opengl3.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/imgui.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/examples/example_sdl_opengl3/main.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/imGuiOpenGLRenderer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/imGuiOpenGLRenderer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Events/KeyEvent.h"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 167.0,
		"where_history":
		[
			"*.h,*.cpp",
			"*.h,*.cpp,-vendor*",
			"*.h,*.cpp,-<project>/Turtle/vendor",
			"*.h,*.cpp,-<project>",
			"*.h,*.cpp,<project>",
			"*.h,*.cpp, -vendor",
			"*.h,*.cpp",
			"-*.cpp",
			"-./*.cpp",
			"-./*",
			"-./vendor/*",
			"-./vendor",
			"",
			"<project>, -C:\\Users\\Austin\\Desktop\\Turtle\\Turtle\\vendor\\*",
			"<project>, - .\\Turtle\\vendor\\*",
			"<project>",
			"-**\\vendor",
			"-*\\vendor",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Application",
			"application::get",
			"s_Instance",
			"unordered_map",
			"TextureSlots",
			"m_path",
			"m_SquareColor",
			"TransformComponent",
			"DestroyInstanceFunction",
			"InstantiateFunction",
			"Instance",
			"drawindexed",
			"aspectRatio",
			"camera",
			"textureCoords",
			"TextureCoords",
			"m_CameraEntity",
			"group",
			"primaryTransform",
			"mainCamera",
			"view",
			"SpriteRendererComponent",
			"TransformComponent",
			"m_SquareEntity",
			"square",
			"s_Instance",
			"entt.hpp",
			"ENTT_STANDARD_CPP",
			"ENTT_STANDARD+CPP",
			"static ",
			", const glm::vec4& color",
			"const glm::vec4& color,",
			"quadVertexCount",
			"DrawQuad",
			";",
			"TransformComponent",
			"\\",
			"TransformComponenet",
			"m_Handled",
			"m_ViewportFocused",
			"inline",
			"Impl",
			"WindowsInput",
			"m_ViewportSize",
			"unsigned int",
			"create",
			"turtle::",
			"Sandbox2D",
			"Turtle::",
			"Sandbox",
			"GL_TEXTURE_2D",
			"override",
			";",
			"VertexArray",
			"dockspaceOpen",
			"dockspace",
			"* v_TilingFactor",
			"spriteSize",
			"m_Sprite",
			"TextureCoords",
			"coords",
			"m_CheckerboardTexture",
			"textureCoords",
			"{0.0f, 1.0f}",
			"{1.0f, 1.0f}",
			"{1.0f, 0.0f}",
			"{0.0f, 0.0f};",
			"{1.0f, 0.0f}",
			"SubTexture2D",
			"texture",
			"Texture2D",
			"QuadIndexCount >",
			"StartNewBatch",
			"s_Data.QuadIndexCount += 6;",
			";",
			"tint",
			"texIndex",
			"textureIndex",
			"tint",
			"QuadVertexPositions",
			"u_textures",
			"a_TilingFactor",
			"Texture2d",
			"TexIndex",
			"texIndex",
			"TexIndex",
			"texIndex",
			"TexIndex",
			"texIndex",
			"TexIndex",
			"u_color",
			"TexIndex",
			"0.0f",
			"Color",
			"color",
			"MaxVerticies",
			"quadVB",
			"++;",
			";\n",
			"sqare",
			"squareVB",
			"s_Data->",
			"s_Data ->",
			"Renderer2DStorage",
			"std::make_shared",
			"createRed",
			"std::make_shared",
			"const glm::vec2& size",
			"DrawQuad",
			", float rotation",
			"DrawQuad",
			"m_CheboardTexture",
			"TURT_PROFILE_FUNCTION",
			"PROFILE_SCOPE",
			"HZ_PROFILE",
			"Hazel",
			"miliseconds",
			"dataFormat",
			"internalFormat",
			"FlatColorShader",
			";",
			"DrawQuad",
			"static",
			"Texture",
			"const glm::vec4& color",
			"OpenGLShader",
			"UploadUniform",
			"UploadUniformInt"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Tortuga/src/Panels/SceneHeirarchyPanel.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2438,
						"regions":
						{
						},
						"selection":
						[
							[
								149,
								149
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2437,
										2438
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										148,
										149
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 102.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 75.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 292.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Turtle.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"sceneheir",
				"Tortuga\\src\\Panels\\SceneHeirarchyPanel.cpp"
			],
			[
				"texturemanager",
				"Turtle\\src\\Turtle\\Core\\TextureManager.h"
			],
			[
				"componen",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"texture.h",
				"Turtle\\src\\Turtle\\Renderer\\Texture.h"
			],
			[
				"editor",
				"Tortuga\\src\\EditorLayer.h"
			],
			[
				"tortuga",
				"Tortuga\\src\\TortugaApp.cpp"
			],
			[
				"application",
				"Turtle\\src\\Turtle\\Core\\Application.cpp"
			],
			[
				"core.h",
				"Turtle\\src\\Turtle\\Core\\Core.h"
			],
			[
				"texture.cpp",
				"Turtle\\src\\Turtle\\Renderer\\Texture.cpp"
			],
			[
				"Textuer",
				"Turtle\\src\\Turtle\\Renderer\\Texture.h"
			],
			[
				"subtex",
				"Turtle\\src\\Turtle\\Renderer\\SubTexture2D.cpp"
			],
			[
				"renderer2d.h",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"renderer2d",
				"Turtle\\src\\Turtle\\Renderer\\Renderer2D.cpp"
			],
			[
				"opengltexture.",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLTexture.cpp"
			],
			[
				"opengltexture",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLTexture.h"
			],
			[
				"compo",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"scene",
				"Turtle\\src\\Turtle\\Scene\\Scene.cpp"
			],
			[
				"texture2d",
				"Turtle\\src\\Turtle\\Renderer\\SubTexture2D.h"
			],
			[
				"rednerer2d",
				"Turtle\\src\\Turtle\\Renderer\\Renderer2D.cpp"
			],
			[
				"scenecamera",
				"Turtle\\src\\Turtle\\Scene\\SceneCamera.h"
			],
			[
				"camera.h",
				"Turtle\\src\\Turtle\\Renderer\\Camera.h"
			],
			[
				"sceneher",
				"Tortuga\\src\\Panels\\SceneHeirarchyPanel.cpp"
			],
			[
				"components",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"renderer",
				"Turtle\\src\\Turtle\\Renderer\\Renderer2D.cpp"
			],
			[
				"openglren",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLRendererAPI.cpp"
			],
			[
				"graphic",
				"Turtle\\src\\Turtle\\Renderer\\GraphicsContext.h"
			],
			[
				"entity",
				"Turtle\\src\\Turtle\\Scene\\Entity.h"
			],
			[
				"imguidemp",
				"Turtle\\vendor\\imgui\\imgui_demo.cpp"
			],
			[
				"premake",
				"premake5.lua"
			],
			[
				"editorlayer",
				"Tortuga\\src\\EditorLayer.h"
			],
			[
				"Turtle",
				"Turtle\\src\\Turtle.h"
			],
			[
				"ent",
				"Turtle\\src\\Turtle\\Scene\\Entity.h"
			],
			[
				"entit",
				"Turtle\\src\\Turtle\\Scene\\Entity.h"
			],
			[
				"ins",
				"Turtle\\src\\Turtle\\Debug\\Instrumentor.h"
			],
			[
				"component",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"open",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLFramebuffer.cpp"
			],
			[
				"sandbox2d",
				"Sandbox\\src\\Sandbox2D.cpp"
			],
			[
				"imguila",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.h"
			],
			[
				"rendere",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"Rednere",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"core.",
				"Turtle\\src\\Turtle\\Core\\Core.h"
			],
			[
				"entt",
				"Turtle\\vendor\\entt\\include\\entt.hpp"
			],
			[
				"turtle",
				"Turtle\\src\\Turtle.h"
			],
			[
				"edit",
				"Tortuga\\src\\EditorLayer.h"
			],
			[
				"compon",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"entt.",
				"Turtle\\vendor\\entt\\include\\entt.hpp"
			],
			[
				"Renderer2d",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"edito",
				"Tortuga\\src\\EditorLayer.cpp"
			],
			[
				"shader",
				"Turtle\\src\\Turtle\\Renderer\\Shader.cpp"
			],
			[
				"buffer",
				"Turtle\\src\\Turtle\\Renderer\\Buffer.cpp"
			],
			[
				"vertexar",
				"Turtle\\src\\Turtle\\Renderer\\VertexArray.cpp"
			],
			[
				"turtpch",
				"Turtle\\src\\turtpch.h"
			],
			[
				"core.g",
				"Turtle\\vendor\\glm\\test\\core\\core_func_geometric.cpp"
			],
			[
				"openglframe",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLFramebuffer.cpp"
			],
			[
				"Frame",
				"Turtle\\src\\Turtle\\Renderer\\Framebuffer.cpp"
			],
			[
				"Event",
				"Turtle\\src\\Turtle\\Events\\Event.h"
			],
			[
				"Imgui",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"applicat",
				"Turtle\\src\\Turtle\\Core\\Application.cpp"
			],
			[
				"imgui",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"insur",
				"Turtle\\src\\Turtle\\Debug\\Instrumentor.h"
			],
			[
				"input",
				"Turtle\\src\\Turtle\\Core\\input.h"
			],
			[
				"windows",
				"Turtle\\src\\Platform\\Windows\\WindowsInput.h"
			],
			[
				"windowswindow",
				"Turtle\\src\\Platform\\Windows\\WindowsInput.cpp"
			],
			[
				"OpenGLContext",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLContext.cpp"
			],
			[
				"openglcon",
				"Turtle\\src\\Platform\\OpenGL\\openglcontext.h"
			],
			[
				"graphics",
				"Turtle\\src\\Turtle\\Renderer\\GraphicsContext.h"
			],
			[
				"opengl",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLFramebuffer.h"
			],
			[
				"rendererapi",
				"Turtle\\src\\Turtle\\Renderer\\RendererAPI.h"
			],
			[
				"text",
				"Tortuga\\assets\\shaders\\Texture.glsl"
			],
			[
				"even",
				"Turtle\\src\\Turtle\\Events\\Event.h"
			],
			[
				"Graphics",
				"Turtle\\src\\Turtle\\Renderer\\GraphicsContext.h"
			],
			[
				"frameb",
				"Turtle\\src\\Turtle\\Renderer\\framebuffer.h"
			],
			[
				"glsl",
				"Sandbox\\assets\\shaders\\Texture.glsl"
			],
			[
				"entr",
				"Turtle\\src\\Turtle\\Core\\EntryPoint.h"
			],
			[
				"imguilayer",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"orthog",
				"Turtle\\src\\Turtle\\Renderer\\OrthographicCameraController.cpp"
			],
			[
				"Ortho",
				"Turtle\\src\\Turtle\\Renderer\\OrthographicCamera.h"
			],
			[
				"orthograo",
				"Turtle\\src\\Turtle\\Renderer\\OrthographicCameraController.h"
			],
			[
				"editorla",
				"Tortuga\\src\\EditorLayer.h"
			],
			[
				"Editor",
				"Tortuga\\src\\EditorLayer.cpp"
			],
			[
				"sand",
				"Sandbox\\src\\sandbox2d.h"
			],
			[
				"sandboxapp",
				"Sandbox\\src\\SandboxApp.cpp"
			],
			[
				"tor",
				"Tortuga\\src\\TortugaApp.cpp"
			],
			[
				"vertexarra",
				"Turtle\\src\\Turtle\\Renderer\\VertexArray.h"
			],
			[
				"window.h",
				"Turtle\\src\\Turtle\\Core\\Window.h"
			],
			[
				"applica",
				"Turtle\\src\\Turtle\\Core\\Application.cpp"
			],
			[
				"appli",
				"Turtle\\src\\Turtle\\Core\\Application.h"
			],
			[
				"tortugaapp",
				"Tortuga\\src\\TortugaApp.cpp"
			],
			[
				"array",
				"Turtle\\src\\Turtle\\Renderer\\VertexArray.cpp"
			],
			[
				"openglte",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLTexture.h"
			],
			[
				"Texture",
				"Turtle\\src\\Turtle\\Renderer\\Texture.h"
			],
			[
				"imgui_de",
				"Turtle\\vendor\\imgui\\imgui_demo.cpp"
			],
			[
				"orht",
				"Turtle\\src\\Turtle\\Renderer\\OrthographicCameraController.h"
			],
			[
				"ortho",
				"Turtle\\src\\Turtle\\Renderer\\OrthographicCameraController.cpp"
			],
			[
				"subtextu",
				"Turtle\\src\\Turtle\\Renderer\\SubTexture2D.cpp"
			],
			[
				"rednerer",
				"Turtle\\src\\Turtle\\Renderer\\Renderer2D.cpp"
			],
			[
				"subte",
				"Turtle\\src\\Turtle\\Renderer\\SubTexture2D.h"
			],
			[
				"snadbox2d",
				"Sandbox\\src\\Sandbox2D.cpp"
			],
			[
				"redner",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"openglshader",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLShader.cpp"
			],
			[
				"textre",
				"Turtle\\src\\Turtle\\Renderer\\Texture.h"
			],
			[
				"opengltex",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLTexture.h"
			],
			[
				"openglrender",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLRendererAPI.cpp"
			],
			[
				"rendercomma",
				"Turtle\\src\\Turtle\\Renderer\\RenderCommand.h"
			],
			[
				"rednere",
				"Turtle\\src\\Turtle\\Renderer\\Renderer2D.cpp"
			],
			[
				"openglb",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLBuffer.h"
			],
			[
				"core",
				"Turtle\\src\\Turtle\\Core\\Core.h"
			],
			[
				"shader.h",
				"Turtle\\src\\Turtle\\Renderer\\Shader.h"
			],
			[
				"camera",
				"Turtle\\src\\Turtle\\Renderer\\OrthographicCameraController.cpp"
			],
			[
				"layerst",
				"Turtle\\src\\Turtle\\Core\\LayerStack.cpp"
			],
			[
				"Renderer",
				"Turtle\\src\\Turtle\\Renderer\\Renderer.cpp"
			],
			[
				"imguilay",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"texture",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLTexture.cpp"
			],
			[
				"vert",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLVertexArray.cpp"
			],
			[
				"verte",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLVertexArray.cpp"
			],
			[
				"Redner",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"openglrenderap",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLRendererAPI.cpp"
			],
			[
				"rendercomm",
				"Turtle\\src\\Turtle\\Renderer\\RenderCommand.h"
			],
			[
				"Rendercomma",
				"Turtle\\src\\Turtle\\Renderer\\RenderCommand.cpp"
			],
			[
				"Rednercomman",
				"Turtle\\src\\Turtle\\Renderer\\RenderCommand.cpp"
			],
			[
				"REnderer",
				"Turtle\\src\\Turtle\\Renderer\\Renderer.cpp"
			],
			[
				"context",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLContext.cpp"
			],
			[
				"contex",
				"Turtle\\src\\Platform\\OpenGL\\openglcontext.h"
			],
			[
				"windowswin",
				"Turtle\\src\\Platform\\Windows\\WindowsWindow.cpp"
			],
			[
				"entryp",
				"Turtle\\src\\Turtle\\Core\\EntryPoint.h"
			],
			[
				"turtpc",
				"Turtle\\src\\turtpch.h"
			],
			[
				"imguil",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"Opengltexture",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLTexture.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
