{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Open",
				"OpenSceneFile\tabc"
			],
			[
				"mFi",
				"m_FileDialogue\tabc"
			],
			[
				"m_File",
				"m_FileDialogue\t(EditorLayer.h)"
			],
			[
				"Deser",
				"DeserializeScene\tabc"
			],
			[
				"Serial",
				"SerializeScene\tabc"
			],
			[
				"part",
				"particleProps\tabc"
			],
			[
				"Get",
				"GetComponent\t(EditorLayer.cpp)"
			],
			[
				"deser",
				"deserializedEntity\tabc"
			],
			[
				"Tag",
				"TagComponent\tabc"
			],
			[
				"Color",
				"ColorBegin\tabc"
			],
			[
				"yaml",
				"yaml_cpp\tabc"
			],
			[
				"Comp",
				"Components.h\t(SceneHeirarchyPanel.cpp)"
			],
			[
				"Veloc",
				"Velocity\tabc"
			],
			[
				"Velocit",
				"VelocityVariation\tabc"
			],
			[
				"End",
				"EndPopup\tabc"
			],
			[
				"Create",
				"CreateEntity\tabc"
			],
			[
				"Begin",
				"BeginPopupContextItem\tabc"
			],
			[
				"tran",
				"translate\t(Renderer2D.cpp)"
			],
			[
				"Asset",
				"AssetMAnager.h\t(AssetManager.cpp)"
			],
			[
				"sele",
				"selectid\tabc"
			],
			[
				"m_Se",
				"m_SelectedFile\tabc"
			],
			[
				"c",
				"c_str\tabc"
			],
			[
				"files",
				"filesystem\tabc"
			],
			[
				"imgui",
				"imgui.h\t(EditorLayer.cpp)"
			],
			[
				"m_",
				"m_Context\tabc"
			],
			[
				"Sho",
				"ShowDemoWindow\t(imgui_demo.cpp)"
			],
			[
				"m_Vi",
				"m_ViewportWidth\tabc"
			],
			[
				"m_View",
				"m_ViewportHeight\tabc"
			],
			[
				"Projection",
				"ProjectionType\t(SceneHeirarchyPanel.cpp)"
			],
			[
				"Camer",
				"Camera\t(SceneHeirarchyPanel.cpp)"
			],
			[
				"m_C",
				"m_ComponentDialogue\tabc"
			],
			[
				"Sprite",
				"SpriteRendererComponent\tabc"
			],
			[
				"m_Compone",
				"m_ComponentType\tabc"
			],
			[
				"Im",
				"ImVec2\t(SceneHeirarchyPanel.cpp)"
			],
			[
				"ListBox",
				"ListBoxFooter\t(imgui_demo.cpp)"
			],
			[
				"ResetSat",
				"ResetState\t(ComponentAddPanel.cpp)"
			],
			[
				"Component",
				"ComponentAddPanel.h\t(ComponentAddPanel.cpp)"
			],
			[
				"Com",
				"ComponentAddPanel\t(ComponentAddPanel.h)"
			],
			[
				"Co",
				"Component\tabc"
			],
			[
				"Scene",
				"SceneHeirarchyPanel\tabc"
			],
			[
				"Sp",
				"SpriteRendererComponent\tabc"
			],
			[
				"Add",
				"AddComponenet\t(Scene.cpp)"
			],
			[
				"square",
				"square2\tabc"
			],
			[
				"sprite",
				"spriteComponent\tabc"
			],
			[
				"Fixed",
				"FixedAspectRatio\t(Scene.cpp)"
			],
			[
				"camera",
				"cameraComponent\tabc"
			],
			[
				"m_Per",
				"m_PerspectiveNear\tabc"
			],
			[
				"m_Pers",
				"m_PerspectiveFov\tabc"
			],
			[
				"m_Proje",
				"m_ProjectionType\tabc"
			],
			[
				"m_Pro",
				"m_ProjectionType\t(SceneCamera.h)"
			],
			[
				"Camera",
				"CameraComponent\tabc"
			],
			[
				"Pro",
				"ProjectionType\tabc"
			],
			[
				"Texture",
				"TextureManager\t(Scene.cpp)"
			],
			[
				"m_Text",
				"m_TextureMap\tabc"
			],
			[
				"Trans",
				"Transform\tabc"
			],
			[
				"Transf",
				"TransformComponent\tabc"
			],
			[
				"valur",
				"value_ptr\t(EditorLayer.cpp)"
			],
			[
				"Transfo",
				"TransformComponent\t(EditorLayer.cpp)"
			],
			[
				"m_Enti",
				"m_EntityHandle\tabc"
			],
			[
				"TreeNode",
				"TreeNodeEx\t(imgui_demo.cpp)"
			],
			[
				"m_Scene",
				"m_SceneHeirarchy\t(EditorLayer.h)"
			],
			[
				"Instance",
				"InstantiateScript\t(Components.h)"
			],
			[
				"m_Camera",
				"m_CameraEntity\tabc"
			],
			[
				"Insta",
				"InstantiateFunction\t(Components.h)"
			],
			[
				"orht",
				"orthoSize\tabc"
			],
			[
				"m_Ortho",
				"m_OrthographicSize\tabc"
			],
			[
				"m_Orthogra",
				"m_OrthographicFar\tabc"
			],
			[
				"m_Or",
				"m_OrthographicNear\tabc"
			],
			[
				"ort",
				"orthoRight\tabc"
			],
			[
				"Scne",
				"SceneCamera\tabc"
			],
			[
				"null",
				"nullptr\t(Entity.h)"
			],
			[
				"TRans",
				"TransformComponent\tabc"
			],
			[
				"m_Camer",
				"m_CameraEntity\t(EditorLayer.h)"
			],
			[
				"glm",
				"glm.hpp\t(Scene.cpp)"
			],
			[
				"Ortho",
				"OrthographicCamera.h\t(Turtle.h)"
			],
			[
				"En",
				"Entity\t(Scene.h)"
			],
			[
				"ent",
				"entity\tabc"
			],
			[
				"Tran",
				"TransformComponent\tabc"
			],
			[
				"m_Vew",
				"m_ViewportHovered\tabc"
			],
			[
				"m_Ve",
				"m_ViewportFocused\tabc"
			],
			[
				"ImGui",
				"ImGui\tabc"
			],
			[
				"m_vi",
				"m_ViewportFocused\tabc"
			],
			[
				"Renderer",
				"RendererAPI\tabc"
			],
			[
				"TURT_",
				"TURT_PROFILE_FUNCTION\t(EditorLayer.cpp)"
			],
			[
				"view",
				"viewportPanelSize\tabc"
			],
			[
				"Windowswind",
				"WindowsWindow.h\t(WindowsWindow.cpp)"
			],
			[
				"Core",
				"Core.h\t(Application.h)"
			],
			[
				"g",
				"glad.h\t(OpenGLTexture.h)"
			],
			[
				"Frame",
				"Framebuffer\tabc"
			],
			[
				"dockign",
				"dockingEnabled\tabc"
			],
			[
				"pubi",
				"public\t(Texture.h)"
			],
			[
				"Ren",
				"Renderer2D\tabc"
			],
			[
				"spir",
				"spriteSize\tabc"
			],
			[
				"m_S",
				"m_Sprite\tabc"
			],
			[
				"Draw",
				"DrawQuad\tabc"
			],
			[
				"m_Spr",
				"m_SpriteSheet\tabc"
			],
			[
				"GetTex",
				"GetTexCoords\t(SubTexture2D.h)"
			],
			[
				"m_Tex",
				"m_TexCoords\tabc"
			],
			[
				"Q",
				"QuadCount\t(Renderer2D.cpp)"
			],
			[
				"GetTot",
				"GetTotalIndexCount\t(renderer2d.h)"
			],
			[
				"Render",
				"Renderer2D\tabc"
			],
			[
				"Stat",
				"Statistics\tabc"
			],
			[
				"a_Tex",
				"a_TexIndex\tabc"
			],
			[
				"v_Tex",
				"v_TexIndex\tabc"
			],
			[
				"Quad",
				"QuadVertexBufferPtr\tabc"
			],
			[
				"TextureSlo",
				"TextureSlots\tabc"
			],
			[
				"TextureSlot",
				"TextureSlotIndex\tabc"
			],
			[
				"Max",
				"MaxIndices\tabc"
			],
			[
				"Ve",
				"Vertex\t(OpenGLBuffer.cpp)"
			],
			[
				"TU",
				"TURT_PROFILE_SCOPE\t(Sandbox2D.cpp)"
			],
			[
				"TURT_PROFILE",
				"TURT_PROFILE_FUNCTION\t(Sandbox2D.cpp)"
			],
			[
				"end",
				"endTimepoint\tabc"
			],
			[
				"size",
				"sizeof\tabc"
			],
			[
				"glad",
				"glad.h\t(OpenGLTexture.cpp)"
			],
			[
				"Textu",
				"TextureShader\tabc"
			],
			[
				"UploadUni",
				"UploadUniformFloat3\tabc"
			],
			[
				"Upload",
				"UploadUniformMat4\t(Renderer.cpp)"
			],
			[
				"Flat",
				"FlatColorShader\tabc"
			],
			[
				"REnder",
				"Renderer2DStorage\tabc"
			],
			[
				"Rendere",
				"Renderer2DStorage\tabc"
			],
			[
				"RenderComm",
				"RenderCommand\tabc"
			],
			[
				"Times",
				"Timestep.h\t(Turtle.h)"
			],
			[
				"O",
				"OrthographicCamera\t(SandboxApp.cpp)"
			],
			[
				"m_Sahder",
				"m_ShaderLibrary\tabc"
			],
			[
				"Ope",
				"OpenGLShader\tabc"
			],
			[
				"glShader",
				"glShaderIdIndex\tabc"
			],
			[
				"vertex",
				"vertexSrc\tabc"
			],
			[
				"next",
				"nextLinePos\tabc"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/User/Engine.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/MSBuild selector/MSBuildSelector.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/MSBuild selector/MSBuildSelector.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/Premake/Premake.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/User/callpremake.sublime-build",
					""
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/MSBuild selector/MSBuildSelector.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					""
				],
				[
					"Packages/Premake/Premake.sublime-build",
					"Run"
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/MSBuild selector/MSBuildSelector.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/callpremake.sublime-build",
					""
				],
				[
					"Packages/User/Engine.sublime-build",
					""
				],
				[
					"Packages/User/EngineRunExit.sublime-build",
					""
				]
			],
			[
				"Packages/User/Engine.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 94.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"build",
				"Build: New Build System"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"proe",
				"Project: Edit"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"font",
				"Set Syntax: Font"
			],
			[
				"proj",
				"Project: Edit"
			],
			[
				"indentati",
				"Indentation: Convert to Tabs"
			],
			[
				"isntallp",
				"Package Control: Install Package"
			],
			[
				"git",
				"Set Syntax: Git Log"
			],
			[
				"chang",
				"Changelog"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"project",
				"Project: Edit"
			],
			[
				"premake",
				"Premake: Generate"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"indentation",
				"Indentation: Convert to Tabs"
			],
			[
				"save",
				"File: Save All"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"insall",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insal",
				"Package Control: Install Package"
			],
			[
				"settin",
				"Preferences: Settings"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"c",
				"Set Syntax: C++"
			],
			[
				"mips",
				"Set Syntax: MIPS"
			],
			[
				"text",
				"Set Syntax: Plain Text"
			],
			[
				"mark",
				"Set Syntax: MultiMarkdown"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"ard",
				"Set Syntax: Arduino"
			],
			[
				"ardui",
				"Set Syntax: Arduino"
			],
			[
				"plain",
				"Set Syntax: Plain Text"
			],
			[
				"xque",
				"Set Syntax: XQuery"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"plain t",
				"Set Syntax: Plain Text"
			],
			[
				"pac",
				"Package Control: Add Channel"
			],
			[
				"gls",
				"Set Syntax: GLSL"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			]
		],
		"width": 496.0
	},
	"console":
	{
		"height": 194.0,
		"history":
		[
			"git"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Austin/Desktop/Turtle",
		"/C/Users/Austin/Desktop/Turtle/Tortuga",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels",
		"/C/Users/Austin/Desktop/Turtle/Turtle",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Utils",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/yaml-cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/yaml-cpp/include"
	],
	"file_history":
	[
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Components.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Entity.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/EditorLayer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Scene.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/EditorLayer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/imgui_demo.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/ImGui/ImGuiLayer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/ComponentSerializers.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/AssetManager.cpp",
		"/C/Users/Austin/Desktop/Turtle/TODO",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Texture.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLTexture.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/SceneHeirarchyPanel.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Scene.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Components.cpp",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/SceneDump.yaml",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/FileSelector.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Utils/PlatformUtils.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows/WindowsPlatformUtils.cpp",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/FileSelector.h",
		"/C/Users/Austin/Desktop/Turtle/premake5.lua",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/entt/include/entt.hpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/yaml-cpp/premake5.lua",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/SceneDump.json",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Application.cpp",
		"/C/Users/Austin/AppData/Roaming/Sublime Text 3/Packages/User/Engine.sublime-build",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/ParticleSpawner.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/renderer2d.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Renderer2D.cpp",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/TilePallettePanel.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/ParticleSpawner.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/imgui_internal.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/imgui.cpp",
		"/C/Users/Austin/AppData/Local/Temp/7zODD4B.tmp/README.txt",
		"/C/Users/Austin/AppData/Local/Temp/7zO38A8.tmp/OFL.txt",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/ComponentSelectPanel.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Shader.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/AssetManager.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLTexture.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Renderer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Texture.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Window.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows/WindowsWindow.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Renderer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Core.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Buffer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/ComponentAddPanel.cpp",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/imgui.ini",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/ScriptableEntity.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/test.txt",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/SceneHeira",
		"/C/Users/Austin/Desktop/Turtle/Win-GenProjects.bat",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/imgui/examples/imgui_examples.sln",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/Entity.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/SceneCamera.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Scene/SceneCamera.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/ComponentAddPanel.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/Panels/SceneHeirarchyPanel.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/ImGui/ImGuiLayer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/OrthographicCameraController.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/TextureManager.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/TextureManager.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Camera.h",
		"/C/Users/Austin/Desktop/Turt/.git/index",
		"/C/Users/Austin/Desktop/Turtle/.git/config",
		"/C/Users/Austin/Desktop/Turt/.git/config",
		"/C/Users/Austin/Desktop/Turt/LICENSE",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Application.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/src/TortugaApp.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/SubTexture2D.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/SubTexture2D.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLRendererAPI.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLFramebuffer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/GraphicsContext.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/openglcontext.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLRendererAPI.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Debug/Instrumentor.h",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/src/Sandbox2D.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Events/Event.h",
		"/C/Users/Austin/AppData/Roaming/Sublime Text 3/Packages/User/callpremake.sublime-build",
		"/C/Users/Austin/Desktop/Turtle/Turtle.sublime-project",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/turtpch.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Shader.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/VertexArray.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Buffer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/glm/test/core/core_func_geometric.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Framebuffer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/VertexArray.h",
		"/C/Users/Austin/Desktop/Turtle/Tortuga/assets/shaders/Texture.glsl",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Framebuffer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLContext.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/input.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/OrthographicCameraController.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLFramebuffer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/RendererAPI.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows/WindowsInput.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows/WindowsInput.h",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/assets/shaders/Texture.glsl",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/EntryPoint.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/OrthographicCamera.h",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/src/sandbox2d.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Window.cpp",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/src/SandboxApp.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLShader.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLShader.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/RenderCommand.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLBuffer.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLBuffer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Application.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/OrthographicCamera.cpp",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/assets/shaders/FlatColor.glsl",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/LayerStack.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/OpenGL/OpenGLVertexArray.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/RenderCommand.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Renderer/Renderer2D.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Events/ApplicationEvent.h",
		"/C/Users/Austin/Desktop/Turtle/Sandbox/src/Sandbox2D.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Log.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/LayerStack.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Core/Layer.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/OrthographicCameraController.cpp",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/OrthographicCameraController.h",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Platform/Windows/WindowsWindow.h",
		"/C/Users/Austin/T-Engine/4.0/settings/upgrades.cfg",
		"/C/Users/Austin/T-Engine/4.0/settings/resolution.cfg",
		"/C/Users/Austin/Desktop/Turtle/Turtle/vendor/GLFW/CMakeLists.txt",
		"/C/Users/Austin/Desktop/Turtle/Turtle/src/Turtle/Layer.h"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 167.0,
		"where_history":
		[
			"*.h,*.cpp",
			"*.h,*.cpp,-vendor*",
			"*.h,*.cpp,-<project>/Turtle/vendor",
			"*.h,*.cpp,-<project>",
			"*.h,*.cpp,<project>",
			"*.h,*.cpp, -vendor",
			"*.h,*.cpp",
			"-*.cpp",
			"-./*.cpp",
			"-./*",
			"-./vendor/*",
			"-./vendor",
			"",
			"<project>, -C:\\Users\\Austin\\Desktop\\Turtle\\Turtle\\vendor\\*",
			"<project>, - .\\Turtle\\vendor\\*",
			"<project>",
			"-**\\vendor",
			"-*\\vendor",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"onst std::string&",
			"Hazel Scene (*.hazel)\\0*.hazel\\0",
			"const std::string& filepath",
			"Hazel",
			"ImGui::Render",
			"ImGui_ImplOpenGL3_RenderDrawData(ImGui::GetDrawData());",
			"ImGui::Render",
			"render",
			"Imgui::render",
			"endchild",
			"const std::string&",
			"m_SceneHeirarchyPanel",
			"m_SceneHierarchyPanel",
			"m_SceneHeirarchyPanel",
			"m_SceneHeirarchy",
			"m_SceneHierarchyPanel",
			"oncameraADd",
			"particleSpawnerComponenet",
			"ParticleSpawnerComponenet",
			"particleSpawnerComponenet",
			"ParticleSpawnerComponenet",
			"tileSetComponenet",
			"TileSetComponenet",
			"tileSetComponenet",
			"TileSetComponenet",
			"ParticleSpawnerComponenet",
			"ParticleSpawnerComponent",
			"VelocityVariation",
			"ColorBegin",
			"Begin",
			"\"];\n",
			".Camera",
			"Camera",
			"deserializedEntity",
			"cameraProps",
			"cc",
			"Entity&",
			"Deserialize>",
			"TileWidth",
			"Deserialize",
			"metaType",
			"Deserialize",
			"Entity entity",
			"entity entity",
			"Entity entity",
			"Deserialize",
			"YAML::Node& out",
			"YAML::Node& data",
			", entt::as_ref_t",
			"Deserialize>",
			"Deserialize",
			"metaType",
			"Data",
			"data",
			"Data",
			"data",
			"Data",
			"data",
			"Data",
			"transformComponent",
			"hashed_string",
			"SerializeScene",
			"\"Serialize\"_hs",
			"Serialize",
			"&get",
			"&g",
			"&G",
			"&g",
			"Deserialize",
			"type(",
			"type",
			"Deserialize",
			"void Serialize",
			"Height",
			"Width",
			"GridSize",
			"GridComponent",
			"TileSetComponenet",
			"SpriteRendererComponent",
			"Camera",
			"VelocityVariation",
			"CameraComponent",
			"camera",
			"cameraComponent.",
			"tc.",
			"std::ofstream& outputStream",
			"outputStream",
			"<< std::endl",
			"std::ofstream&",
			"outputStream <<",
			"\";",
			"flush",
			"GridComponent",
			"TileSetComponenet",
			"ParticleSpawnerComponenet",
			"NativeScriptComponent",
			"CameraComponent",
			"TransformComponent",
			"ofstream",
			"}\n",
			":\n",
			"to_meta_function_helper",
			"factory",
			"constexpr void to_meta_function_helper(...);",
			"alias",
			"func",
			"::Serialize",
			"Serialize",
			"GridComponent",
			"CameraComponent",
			"SpriteRendererComponent",
			"GetContentRegionAvailWidth",
			"CameraTransform",
			"PopItemWidth",
			"ImGuiTreeNodeFlags_DefaultOpen",
			"ImGui::DragFloat",
			"0.0f",
			"PopItemWidth",
			"balues",
			"y",
			"x",
			"translation",
			"transform",
			"Transform",
			"transform",
			"   ",
			"Transform",
			"(*cameraTransform)[3][1]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 75.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 292.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Turtle.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"edit",
				"Tortuga\\src\\EditorLayer.cpp"
			],
			[
				"editorlayer",
				"Tortuga\\src\\EditorLayer.cpp"
			],
			[
				"filesele",
				"Tortuga\\src\\Panels\\FileSelector.cpp"
			],
			[
				"editor",
				"Tortuga\\src\\EditorLayer.cpp"
			],
			[
				"filesel",
				"Tortuga\\src\\Panels\\FileSelector.h"
			],
			[
				"scene",
				"Tortuga\\src\\Panels\\SceneHeirarchyPanel.cpp"
			],
			[
				"fils",
				"Tortuga\\src\\Panels\\FileSelector.h"
			],
			[
				"",
				"Tortuga\\src\\Panels\\FileSelector.cpp"
			],
			[
				"filesl",
				"Tortuga\\src\\Panels\\FileSelector.cpp"
			],
			[
				"imguilay",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"premake",
				"premake5.lua"
			],
			[
				"filesle",
				"Tortuga\\src\\Panels\\FileSelector.cpp"
			],
			[
				"imguil",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"imguilayer",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"imguidemo",
				"Turtle\\vendor\\imgui\\imgui_demo.cpp"
			],
			[
				"file sle",
				"Tortuga\\src\\Panels\\FileSelector.cpp"
			],
			[
				"scenedump",
				"Tortuga\\SceneDump.yaml"
			],
			[
				"componen",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"componenet",
				"Turtle\\src\\Turtle\\Scene\\ComponentSerializers.cpp"
			],
			[
				"component",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"assetma",
				"Turtle\\src\\Turtle\\Core\\AssetManager.cpp"
			],
			[
				"components",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"opengltexture",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLTexture.h"
			],
			[
				"texture.h",
				"Turtle\\src\\Turtle\\Renderer\\Texture.h"
			],
			[
				"todo",
				"TODO"
			],
			[
				"sceneheir",
				"Tortuga\\src\\Panels\\SceneHeirarchyPanel.cpp"
			],
			[
				".yaml",
				"Tortuga\\SceneDump.yaml"
			],
			[
				"compone",
				"Turtle\\src\\Turtle\\Scene\\ComponentSerializers.cpp"
			],
			[
				"entt",
				"Turtle\\vendor\\entt\\include\\entt.hpp"
			],
			[
				"entt.h",
				"Turtle\\vendor\\entt\\include\\entt.hpp"
			],
			[
				"EDITOR",
				"Tortuga\\src\\EditorLayer.cpp"
			],
			[
				"entity",
				"Turtle\\src\\Turtle\\Scene\\Entity.h"
			],
			[
				"scene.h",
				"Turtle\\src\\Turtle\\Scene\\Scene.h"
			],
			[
				"assetman",
				"Turtle\\src\\Turtle\\Core\\AssetManager.cpp"
			],
			[
				"texture",
				"Turtle\\src\\Turtle\\Renderer\\Texture.h"
			],
			[
				"scene.cpp",
				"Turtle\\src\\Turtle\\Scene\\Scene.cpp"
			],
			[
				"componentser",
				"Turtle\\src\\Turtle\\Scene\\ComponentSerializers.cpp"
			],
			[
				"scen",
				"Tortuga\\SceneDump.json"
			],
			[
				"Scene.cpp",
				"Turtle\\src\\Turtle\\Scene\\Scene.cpp"
			],
			[
				"ditor",
				"Tortuga\\src\\EditorLayer.cpp"
			],
			[
				"edito",
				"Tortuga\\src\\EditorLayer.cpp"
			],
			[
				"applicaiton",
				"Turtle\\src\\Turtle\\Core\\Application.cpp"
			],
			[
				"entt.hpp",
				"Turtle\\vendor\\entt\\include\\entt.hpp"
			],
			[
				"application",
				"Turtle\\src\\Turtle\\Core\\Application.cpp"
			],
			[
				"particlespa",
				"Turtle\\src\\Turtle\\Renderer\\ParticleSpawner.h"
			],
			[
				"particle",
				"Turtle\\src\\Turtle\\Renderer\\ParticleSpawner.cpp"
			],
			[
				"renderer2d",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"tilepalle",
				"Tortuga\\src\\Panels\\TilePallettePanel.cpp"
			],
			[
				"TODO",
				"TODO"
			],
			[
				"Entity",
				"Turtle\\src\\Turtle\\Scene\\Entity.h"
			],
			[
				"scenehei",
				"Tortuga\\src\\Panels\\SceneHeirarchyPanel.cpp"
			],
			[
				"componentSele",
				"Tortuga\\src\\Panels\\ComponentSelectPanel.cpp"
			],
			[
				"Scene",
				"Turtle\\src\\Turtle\\Scene\\Scene.cpp"
			],
			[
				"comp",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"compo",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"window",
				"Turtle\\src\\Turtle\\Core\\Window.h"
			],
			[
				"windowswindo",
				"Turtle\\src\\Platform\\Windows\\WindowsWindow.cpp"
			],
			[
				"TODo",
				"TODO"
			],
			[
				"renderer.h",
				"Turtle\\src\\Turtle\\Renderer\\Renderer.h"
			],
			[
				"renderer",
				"Turtle\\src\\Turtle\\Renderer\\Renderer.cpp"
			],
			[
				"rednerer2d",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"renderer.",
				"Turtle\\src\\Turtle\\Renderer\\Renderer.cpp"
			],
			[
				"texturemanager",
				"Turtle\\src\\Turtle\\Core\\TextureManager.h"
			],
			[
				".ini",
				"Tortuga\\imgui.ini"
			],
			[
				"imgui_demo",
				"Turtle\\vendor\\imgui\\imgui_demo.cpp"
			],
			[
				"imgui_",
				"Turtle\\vendor\\imgui\\imgui_demo.cpp"
			],
			[
				"imggui_",
				"Turtle\\vendor\\imgui\\imgui_demo.cpp"
			],
			[
				"core",
				"Turtle\\src\\Turtle\\Core\\Core.h"
			],
			[
				"scripta",
				"Turtle\\src\\Turtle\\Scene\\ScriptableEntity.h"
			],
			[
				"componentadd",
				"Tortuga\\src\\Panels\\ComponentAddPanel.cpp"
			],
			[
				"imgui_examp",
				"Turtle\\vendor\\imgui\\examples\\imgui_examples.sln"
			],
			[
				"sceneheri",
				"Tortuga\\src\\Panels\\SceneHeirarchyPanel.cpp"
			],
			[
				"scenecamera",
				"Turtle\\src\\Turtle\\Scene\\SceneCamera.cpp"
			],
			[
				"entit",
				"Turtle\\src\\Turtle\\Scene\\Entity.h"
			],
			[
				"entity.",
				"Turtle\\src\\Turtle\\Scene\\Entity.cpp"
			],
			[
				"scene.",
				"Turtle\\src\\Turtle\\Scene\\Scene.h"
			],
			[
				"core.h",
				"Turtle\\src\\Turtle\\Core\\Core.h"
			],
			[
				"SceneCamera",
				"Turtle\\src\\Turtle\\Scene\\SceneCamera.h"
			],
			[
				"imgui_dem",
				"Turtle\\vendor\\imgui\\imgui_demo.cpp"
			],
			[
				"imguidemp",
				"Turtle\\vendor\\imgui\\imgui_demo.cpp"
			],
			[
				"orthograp",
				"Turtle\\src\\Turtle\\Renderer\\OrthographicCameraController.cpp"
			],
			[
				"camera",
				"Turtle\\src\\Turtle\\Renderer\\Camera.h"
			],
			[
				"scenecamer",
				"Turtle\\src\\Turtle\\Scene\\SceneCamera.h"
			],
			[
				"texturemana",
				"Turtle\\src\\Turtle\\Core\\TextureManager.h"
			],
			[
				"imguilayer.h",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.h"
			],
			[
				"imguila",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"Renderer2d",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"tortuga",
				"Tortuga\\src\\TortugaApp.cpp"
			],
			[
				"texture.cpp",
				"Turtle\\src\\Turtle\\Renderer\\Texture.cpp"
			],
			[
				"Textuer",
				"Turtle\\src\\Turtle\\Renderer\\Texture.h"
			],
			[
				"subtex",
				"Turtle\\src\\Turtle\\Renderer\\SubTexture2D.cpp"
			],
			[
				"renderer2d.h",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"opengltexture.",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLTexture.cpp"
			],
			[
				"texture2d",
				"Turtle\\src\\Turtle\\Renderer\\SubTexture2D.h"
			],
			[
				"camera.h",
				"Turtle\\src\\Turtle\\Renderer\\Camera.h"
			],
			[
				"sceneher",
				"Tortuga\\src\\Panels\\SceneHeirarchyPanel.cpp"
			],
			[
				"openglren",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLRendererAPI.cpp"
			],
			[
				"graphic",
				"Turtle\\src\\Turtle\\Renderer\\GraphicsContext.h"
			],
			[
				"Turtle",
				"Turtle\\src\\Turtle.h"
			],
			[
				"ent",
				"Turtle\\src\\Turtle\\Scene\\Entity.h"
			],
			[
				"ins",
				"Turtle\\src\\Turtle\\Debug\\Instrumentor.h"
			],
			[
				"open",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLFramebuffer.cpp"
			],
			[
				"sandbox2d",
				"Sandbox\\src\\Sandbox2D.cpp"
			],
			[
				"rendere",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"Rednere",
				"Turtle\\src\\Turtle\\Renderer\\renderer2d.h"
			],
			[
				"core.",
				"Turtle\\src\\Turtle\\Core\\Core.h"
			],
			[
				"turtle",
				"Turtle\\src\\Turtle.h"
			],
			[
				"compon",
				"Turtle\\src\\Turtle\\Scene\\Components.h"
			],
			[
				"entt.",
				"Turtle\\vendor\\entt\\include\\entt.hpp"
			],
			[
				"shader",
				"Turtle\\src\\Turtle\\Renderer\\Shader.cpp"
			],
			[
				"buffer",
				"Turtle\\src\\Turtle\\Renderer\\Buffer.cpp"
			],
			[
				"vertexar",
				"Turtle\\src\\Turtle\\Renderer\\VertexArray.cpp"
			],
			[
				"turtpch",
				"Turtle\\src\\turtpch.h"
			],
			[
				"core.g",
				"Turtle\\vendor\\glm\\test\\core\\core_func_geometric.cpp"
			],
			[
				"openglframe",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLFramebuffer.cpp"
			],
			[
				"Frame",
				"Turtle\\src\\Turtle\\Renderer\\Framebuffer.cpp"
			],
			[
				"Event",
				"Turtle\\src\\Turtle\\Events\\Event.h"
			],
			[
				"Imgui",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"applicat",
				"Turtle\\src\\Turtle\\Core\\Application.cpp"
			],
			[
				"imgui",
				"Turtle\\src\\Turtle\\ImGui\\ImGuiLayer.cpp"
			],
			[
				"insur",
				"Turtle\\src\\Turtle\\Debug\\Instrumentor.h"
			],
			[
				"input",
				"Turtle\\src\\Turtle\\Core\\input.h"
			],
			[
				"windows",
				"Turtle\\src\\Platform\\Windows\\WindowsInput.h"
			],
			[
				"windowswindow",
				"Turtle\\src\\Platform\\Windows\\WindowsInput.cpp"
			],
			[
				"OpenGLContext",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLContext.cpp"
			],
			[
				"openglcon",
				"Turtle\\src\\Platform\\OpenGL\\openglcontext.h"
			],
			[
				"graphics",
				"Turtle\\src\\Turtle\\Renderer\\GraphicsContext.h"
			],
			[
				"opengl",
				"Turtle\\src\\Platform\\OpenGL\\OpenGLFramebuffer.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
